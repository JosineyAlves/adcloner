// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  facebookAccounts FacebookAccount[]
  sessions      Session[]
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FacebookAccount {
  id              String   @id @default(cuid())
  userId          String
  accountId       String   @unique
  accountName     String
  accountStatus   String   @default("active")
  accessToken     String
  refreshToken    String?
  expiresAt       DateTime?
  profileName     String?
  profileEmail    String?
  profileId       String?
  businessId      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  campaigns       Campaign[]
  insights        Insight[]
}

model Campaign {
  id              String   @id @default(cuid())
  facebookAccountId String
  campaignId      String
  name            String
  status          String
  objective       String?
  budget          Float?
  budgetType      String?
  startTime       DateTime?
  endTime         DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  facebookAccount FacebookAccount @relation(fields: [facebookAccountId], references: [id], onDelete: Cascade)
  insights        Insight[]
}

model Insight {
  id              String   @id @default(cuid())
  facebookAccountId String
  campaignId      String?
  date            DateTime
  impressions     Int      @default(0)
  clicks          Int      @default(0)
  spend           Float    @default(0)
  reach           Int      @default(0)
  frequency       Float    @default(0)
  cpm             Float    @default(0)
  cpc             Float    @default(0)
  ctr             Float    @default(0)
  conversions     Int      @default(0)
  costPerConversion Float  @default(0)
  inlineLinkClicks Int     @default(0)
  inlinePostEngagement Int @default(0)
  createdAt       DateTime @default(now())
  
  facebookAccount FacebookAccount @relation(fields: [facebookAccountId], references: [id], onDelete: Cascade)
  campaign        Campaign?       @relation(fields: [campaignId], references: [id], onDelete: Cascade)
}

model UserSettings {
  id              String   @id @default(cuid())
  userId          String   @unique
  mainMetrics     Json     @default("[]")
  datePreset      String   @default("today")
  customDateRange Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
} 